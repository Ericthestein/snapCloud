env HOSTNAME;
env SECOND_HOSTNAME;
env PORT;
env SSL_PORT;
env DATABASE_URL;
env DATABASE_USERNAME;
env DATABASE_PASSWORD;
env DATABASE_NAME;
env SSL_CERT_FILE;
env SSL_CERT_PRIVATE_KEY;
env SSL_SECOND_CERT_FILE;
env SSL_SECOND_CERT_PRIVATE_KEY;
env SESSION_SECRET_BASE;
env DNS_RESOLVER;
env LOG_DIRECTIVE;
env MAIL_SMTP_USER;
env MAIL_SMTP_PASSWORD;
env MAIL_SMTP_SERVER;
env MONITOR;

worker_processes ${{NUM_WORKERS}};
error_log ${{LOG_DIRECTIVE}};
daemon ${{USE_DAEMON}};
pid logs/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    lua_shared_dict auto_ssl 1m;
    lua_shared_dict auto_ssl_settings 64k;
    lua_shared_dict page_cache 15m;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    resolver ${{DNS_RESOLVER}};

    # We use a separate server block for each host to serve specific certs.
    server {
        server_name ${{HOSTNAME}};
        listen ${{PORT}};

        listen ${{SSL_PORT}} ssl;
        ssl_certificate     certs/${{SSL_CERT_FILE}};
        ssl_certificate_key certs/${{SSL_CERT_PRIVATE_KEY}};
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        lua_code_cache ${{CODE_CACHE}};

        client_body_buffer_size     10M;
        client_max_body_size        10M;

        location / {
            default_type text/html;
            content_by_lua 'require("lapis").serve("app")';
        }

        location /snap/ {
            alias snap/;
        }

        location /site/ {
            alias site/www/;
        }

        location /static/ {
            alias static/;
        }

        # nginx server status used for monitoring
        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }
    }

    server {
        server_name ${{SECOND_HOSTNAME}};
        listen ${{PORT}};

        listen ${{SSL_PORT}} ssl;
        ssl_certificate     certs/${{SSL_SECOND_CERT_FILE}};
        ssl_certificate_key certs/${{SSL_SECOND_CERT_PRIVATE_KEY}};

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        lua_code_cache ${{CODE_CACHE}};

        client_body_buffer_size     10M;
        client_max_body_size        10M;

        # Needed for LetsEncrypt certbot to authenticate
        # Note: This is mapped to ./html/.well-known/acme-challenge
    
        location ~ /.well-known/acme-challenge/ {
            allow all;
            default_type "text/plain";
        }

        location / {
            default_type text/html;
            content_by_lua 'require("lapis").serve("app")';
        }

        location /snap/ {
            alias snap/;
        }

        location /site/ {
            alias site/www/;
        }

        location /static/ {
            alias static/;
        }
    }

    # nginx amplify monitoring service
    server {
        listen 127.0.0.1:80;
        server_name 127.0.0.1;
        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }
    }
}
