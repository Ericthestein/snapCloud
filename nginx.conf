env HOSTNAME;
env SECOND_HOSTNAME;
env PORT;
env SSL_PORT;
env DATABASE_URL;
env DATABASE_USERNAME;
env DATABASE_PASSWORD;
env DATABASE_NAME;
env SSL_CERT_FILE;
env SSL_CERT_PRIVATE_KEY;
env SSL_SECOND_CERT_FILE;
env SSL_SECOND_CERT_PRIVATE_KEY;
env SESSION_SECRET_BASE;
env DNS_RESOLVER;
env LOG_DIRECTIVE;
env MAIL_SMTP_USER;
env MAIL_SMTP_PASSWORD;
env MAIL_SMTP_SERVER;
env MONITOR;
env WORKER_CONNECTIONS;

worker_processes ${{NUM_WORKERS}};
error_log ${{LOG_DIRECTIVE}};
daemon ${{USE_DAEMON}};
pid logs/nginx.pid;

events {
    worker_connections ${{WORKER_CONNECTIONS}};
}

http {
    include nginx.conf.d/mime.types;
    lua_shared_dict auto_ssl 1m;
    lua_shared_dict auto_ssl_settings 64k;
    lua_shared_dict page_cache 15m;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    resolver ${{DNS_RESOLVER}};

    lua_code_cache ${{CODE_CACHE}};

    client_body_buffer_size     10M;
    client_max_body_size        10M;

    # We use a separate server block for each host to serve specific certs.
    server {
        server_name ${{HOSTNAME}};
        listen ${{PORT}};

        include nginx.conf.d/ssl.conf;
        ssl_certificate     certs/${{SSL_CERT_FILE}};
        ssl_certificate_key certs/${{SSL_CERT_PRIVATE_KEY}};

        include nginx.conf.d/locations.conf;
    }

    server {
        server_name ${{SECOND_HOSTNAME}};
        listen ${{PORT}};

        include nginx.conf.d/ssl.conf;
        ssl_certificate     certs/${{SSL_SECOND_CERT_FILE}};
        ssl_certificate_key certs/${{SSL_SECOND_CERT_PRIVATE_KEY}};

        # Needed for LetsEncrypt certbot to authenticate
        # Note: This is mapped to ./html/.well-known/acme-challenge

        location ~ /.well-known/acme-challenge/ {
            allow all;
            default_type "text/plain";
        }

        include nginx.conf.d/locations.conf;
    }

    # nginx amplify monitoring service
    server {
        listen 127.0.0.1:80;
        server_name 127.0.0.1;
        location /nginx_status {
            stub_status on;
            allow 127.0.0.1;
            deny all;
        }
    }
}
