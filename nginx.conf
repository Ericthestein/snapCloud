worker_processes ${{NUM_WORKERS}};
error_log stderr notice;
daemon ${{USE_DAEMON}};
pid logs/nginx.pid;
env PORT;
env SSL_PORT;
env SSL_CERT_NAME;
env DATABASE_USERNAME;
env DATABASE_URL;
env DATABASE_PASSWORD;
env DATABASE_NAME;
env SESSION_SECRET_BASE;
env HOSTNAME;
env ENABLE_AUTO_SSL;
env MAIL_SMTP_USER;
env MAIL_SMTP_PASSWORD;
env MAIL_SMTP_SERVER;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    lua_shared_dict auto_ssl 1m;
    lua_shared_dict auto_ssl_settings 64k;
    lua_shared_dict page_cache 15m;
    ssl_session_cache   shared:SSL:10m;
    ssl_session_timeout 10m;
    resolver 67.207.67.2 ipv6=off;

    init_by_lua_block {
        if ${{ENABLE_AUTO_SSL}} then
            auto_ssl = (require "resty.auto-ssl").new()
            auto_ssl:set("allow_domain", function(domain)
              return true
            end)

            auto_ssl:init()
        end
    }

    init_worker_by_lua_block {
        if ${{ENABLE_AUTO_SSL}} then auto_ssl:init_worker() end
    }

    server {
        server_name ${{HOSTNAME}};
        listen ${{PORT}};

        listen ${{SSL_PORT}} ssl;
        ssl_certificate_by_lua_block {
            if ${{ENABLE_AUTO_SSL}} then auto_ssl:ssl_certificate() end
        }
        ssl_certificate     ${{SSL_CERT_NAME}}.cert;
        ssl_certificate_key ${{SSL_CERT_NAME}}.key;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        lua_code_cache ${{CODE_CACHE}};

        client_body_buffer_size     10M;
        client_max_body_size        10M;

        location ^~ /.well-known/acme-challenge/ {
            allow all;
            default_type "text/plain";
        }

        location / {
            default_type text/html;
            content_by_lua 'require("lapis").serve("app")';
        }

        location /static/ {
            alias static/;
        }
    }

    server {
        listen ${{PORT}};

        # Endpoint used for performing domain verification with Let's Encrypt.
        location /.well-known/acme-challenge/ {
          content_by_lua_block {
            if ${{ENABLE_AUTO_SSL}} then auto_ssl:challenge_server() end
          }
        }
    }

    server {
        listen 127.0.0.1:8999;

        # Increase the body buffer size, to ensure the internal POSTs can always
        # parse the full POST contents into memory.
        client_body_buffer_size 128k;
        client_max_body_size 128k;

        location / {
          content_by_lua_block {
            if ${{ENABLE_AUTO_SSL}} then auto_ssl:hook_server() end
          }
        }
    }
}
